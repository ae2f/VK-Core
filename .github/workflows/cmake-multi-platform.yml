name: ae2f-workflow
on:
  push:
    branches: [main]
  
jobs:
  test-compiler-majours:
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, ubuntu-24.04-arm, windows-11-arm]
        c:  [-DCMAKE_C_COMPILER=gcc, -DCMAKE_C_COMPILER=clang]
        conf: [Release, Debug]

        include:
          - os: ubuntu-latest
            bash: bash
            make: "-GUnix Makefiles"

          - os: windows-latest
            bash: bash
            make: "-GMinGW Makefiles"

          - os: macos-latest
            bash: bash
            make: "-GUnix Makefiles"
            
          - os: ubuntu-24.04-arm
            bash: bash
            make: "-GUnix Makefiles"

          - os: windows-11-arm
            bash: bash
            make: "-GMinGW Makefiles"

          - c: -DCMAKE_C_COMPILER=gcc
            cc: -DCMAKE_CXX_COMPILER=g++
            
          - c: -DCMAKE_C_COMPILER=clang
            cc: -DCMAKE_CXX_COMPILER=clang++

    steps:
    - uses: actions/checkout@v4
      with:
        ref: 'main'
        fetch-depth: '1'

    - name: Set reusable strings
      id: strings
      shell: bash
      run: echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
      
    - name: Use GCC
      if: matrix.c == '-DCMAKE_C_COMPILER=gcc'
      uses: Matt-DESTROYER/Use-GCC@v1.2
      
    - name: setupninja-win
      if: matrix.os == 'windows-11-arm'
      uses: seanmiddleditch/gha-setup-ninja@v6

    - name: setupclang-win
      if: matrix.c == '-DCMAKE_C_COMPILER=clang' && matrix.os == 'windows-11-arm' || matrix.os == 'windows-latest'
      uses: egor-tensin/setup-clang@v1

    - name: Install Vulkan SDK
      uses: jakoch/install-vulkan-sdk-action@v1.2.5
      
    - name: Test
      run: ${{ matrix.bash }} ./test.sh ${{ matrix.c }} ${{ matrix.cc }} ${{ matrix.conf }} ${{ matrix.make }}
        
